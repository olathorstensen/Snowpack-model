#################### SC1 - Pinzer experiment ####################

# Plot of results:
# Plotly
# # BC
# fig = go.Figure()
# fig.add_trace(go.Scatter(x = y, y = bc, mode='lines', name='Surface bc'))
# fig.add_trace(go.Scatter(x = y, y = b_bc, mode='lines', name='Bottom bc'))

# fig.update_layout(
#     width = 900, height = 600, 
#     title='Temperature Boundary Conditions', xaxis_title='Hours', 
#     yaxis_title='Temperature [째C]', legend=dict(title='Legend'))
# fig.show()

# # Temp
# fig = go.Figure()
# for p in np.arange(0, ny+1, h*pisp):
#     fig.add_trace(go.Scatter(x=temp[:, p], y=x, mode='lines', name=f'Time {y_t[p]}'))

# fig.update_layout(
#     width = 900, height = 600,
#     title='Temperature', xaxis_title='Temperature [째C]', yaxis_title='Depth [cm]', 
#                   yaxis=dict(autorange='reversed'), legend=dict(font=dict(size=8)))
# fig.show()

# # Vapor pressure
# fig = go.Figure()
# for p in np.arange(0, ny+1, h*pisp):
#     fig.add_trace(go.Scatter(x=vp[:, p], y=x, mode='lines', name=f'Time {y_t[p]}'
#     ))

# fig.update_layout(
#     width = 900, height = 600, 
#     title='Vapor Pressure', xaxis_title='Vapor Pressure [mb]', yaxis_title='Depth [cm]',
#                   yaxis=dict(autorange='reversed'))
# fig.show()

# fig = go.Figure()
# fig.add_trace(go.Scatter(x = y, y = vp[0, :], mode='lines', name='Surface vp'))
# fig.add_trace(go.Scatter(x = y, y = vp[10, :], mode='lines', name='Bottom vp'))

# fig.update_layout(
#     width = 900, height = 600,
#     title='Vapor Pressure', xaxis_title='Time  [h]', 
#     yaxis_title='Vapor Pressure [mb]', legend=dict(title='Legend'))
# fig.show()

# # VPG
# fig = go.Figure()
# fig.add_trace(go.Scatter(x = y, y = vpg[0, :], mode='lines', name='Surface vpg'))
# fig.add_trace(go.Scatter(x = y, y = vpg[10, :], mode='lines', name='Bottom vpg'))

# fig.update_layout(
#     width = 900, height = 600,
#     title='Vapor Pressure Gradient', xaxis_title='Time  [h]', 
#     yaxis_title='Vapor Pressure Gradient [Pa/cm]', legend=dict(title='Legend'))
# fig.show()

# # Growth rate
# fig = go.Figure()
# fig.add_trace(go.Scatter(x = y, y = fgr[0, :], mode='lines', name='Surface fgr'))
# fig.add_trace(go.Scatter(x = y, y = fgr[9, :], mode='lines', name='Bottom fgr'))

# fig.update_layout(
#     width = 900, height = 600,
#     title='Facet Growth Rate', xaxis_title='Time  [h]', 
#     yaxis_title='Facet growth rate [nm/s]', legend=dict(title='Legend'))
# fig.show()

# Growth
# fig = go.Figure()
# fig.add_trace(go.Scatter(x = y, y = fg[0, :], mode='lines', name='Surface fg'))
# fig.add_trace(go.Scatter(x = y, y = fg[10, :], mode='lines', name='Bottom fg'))

# fig.update_layout(
#     width = 900, height = 600,
#     title='Facet Growth', xaxis_title='Time  [h]', 
#     yaxis_title='Facet growth [mm]', legend=dict(title='Legend'))
# fig.show()

# # Net facet growth
# fig = go.Figure()
# fig.add_trace(go.Scatter(x = net_growth[0:9], y = x, mode='lines', name='Net Growth'))

# fig.update_layout(
#     width = 900,
#     height = 600,
#     title='Net Facet Growth',
#     xaxis_title='Net Growth [mm]',
#     yaxis_title='Depth [cm]',
#     yaxis=dict(autorange='reversed'))
# fig.show()

# ############## Matplotlib
# # BC
# plt.figure(figsize=(9, 6))
# plt.plot(y, bc, label='Surface bc')
# plt.plot(y, b_bc, label='Bottom bc')
# plt.title('Temperature Boundary Conditions')
# plt.xlabel('Hours')
# plt.ylabel('Temperature [째C]')
# plt.legend(title='Legend')
# plt.grid(True, alpha=0.5)
# plt.show()

# # Temp
# plt.figure(figsize=(9, 6))
# for p in np.arange(0, ny+1, h*pisp):
#     plt.plot(temp[:, p], x, label=f'Time {y_t[p]}')
# plt.title('Temperature')
# plt.xlabel('Temperature [째C]')
# plt.ylabel('Depth [cm]')
# plt.gca().invert_yaxis()
# plt.legend(fontsize=8)
# plt.grid(True, alpha=0.5)
# plt.show()

# # Vapor pressure
# plt.figure(figsize=(9, 6))
# for p in np.arange(0, ny+1, h*pisp):
#     plt.plot(vp[:, p], x, label=f'Time {y_t[p]}')
# plt.title('Vapor Pressure')
# plt.xlabel('Vapor Pressure [mb]')
# plt.ylabel('Depth [cm]')
# plt.gca().invert_yaxis()
# plt.grid(True, alpha=0.5)
# plt.legend()
# plt.show()

# plt.figure(figsize=(9, 6))
# plt.plot(y, vp[0, :], label='Surface vp')
# plt.plot(y, vp[-1, :], label='Bottom vp')
# plt.title('Vapor Pressure')
# plt.xlabel('Time [h]')
# plt.ylabel('Vapor Pressure [mb]')
# plt.legend()
# plt.grid(True, alpha=0.5)
# plt.show()

# # VPG
# plt.figure(figsize=(9, 6))
# plt.plot(y, vpg[0, :], label='Surface vpg')
# plt.plot(y, vpg[-1, :], label='Bottom vpg')
# plt.title('Vapor Pressure Gradient')
# plt.xlabel('Time [h]')
# plt.ylabel('Vapor Pressure Gradient [Pa/cm]')
# plt.legend(title='Legend')
# plt.grid(True, alpha=0.5)
# plt.show()

# # Growth rate
# plt.figure(figsize=(9, 6))
# plt.plot(y, fgr[0, :], label='Surface fgr')
# plt.plot(y, fgr[-1, :], label='Bottom fgr')
# plt.title('Facet Growth Rate')
# plt.xlabel('Time [h]')
# plt.ylabel('Facet Growth Rate [nm/s]')
# plt.legend(title='Legend')
# plt.grid(True, alpha=0.5)
# plt.show()

# # Growth 
# plt.figure(figsize=(9, 6))
# plt.plot(y, fg[0, :], label='Surface fg')
# plt.plot(y, fg[-1, :], label='Bottom fg')
# plt.title('Facet Growth')
# plt.xlabel('Time [h]')
# plt.ylabel('Facet Growth [mm]')
# plt.legend(title='Legend')
# plt.grid(True, alpha=0.5)
# plt.show()

# # Net growth
# plt.figure(figsize=(9, 6))
# plt.plot(net_growth, x[0:-1], label='Net Growth')
# plt.title('Net Facet Growth')
# plt.xlabel('Net Growth [mm]')
# plt.ylabel('Depth [cm]')
# plt.gca().invert_yaxis()  # Reverse the y-axis for depth
# plt.grid(True, alpha=0.5)
# plt.show()
################################################################
